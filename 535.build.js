(self.webpackChunkjs_solutions=self.webpackChunkjs_solutions||[]).push([[535,790],{21790:(n,e,t)=>{"use strict";t.r(e),t.d(e,{basic:()=>r});var o=t(91713),r=[{category:o.Category.JAVASCRIPT,subcategory:o.JSSubcategory.OBJECT,title:"Copy of object",icon:"las la-copy",codes:[{key:"1",title:"shallow",code:"\n// Spread operator\nconst newObj = { ...obj }\n\n// Object.assign() method\nconst newObj = Object.assign({}, obj);\n      ",usage:"\nconst obj = {\n  a: 1,\n  b: '2'\n}\n\nconst newObj = { ...obj }\n// or\nconst newObj = Object.assign({}, obj);\n\n// const newObj = {\n//  a: 1,\n//  b: '2'\n// }\n\n      "},{key:"2",title:"deep",code:'\nconst deepCopy = (param) => {\n  let copyResult\n  let value\n\n  if (typeof param !== "object" || param === null) {\n    return param\n  }\n\n  copyResult = Array.isArray(param) ? [] : {}\n\n  for (const key in param) {\n    value = param[key]\n\n    copyResult[key] = deepCopy(value)\n  }\n\n  return copyResult\n}\n      ',usage:'\nconst originalObj = {\n  hello: {\n    word: "word"\n  }\n}\n\nconst copiedObj = deepCopy(originalObj)\ncopiedObj.hello.word = \'excel\'\n\n// const originalObj = {\n//   hello: {\n//     word: "word"\n//   }\n// }\n\n// const copiedObj = {\n//   hello: {\n//     word: "excel"\n//   }\n// }\n\n      '}]},{category:o.Category.JAVASCRIPT,subcategory:o.JSSubcategory.OBJECT,title:"Get array of objects in order, based on property from another list",icon:"las la-stream",codes:[{key:"1",title:"reduce",code:"\nconst getListOfObjects = (list, listOfObjects, key) =>\n  list.reduce((acc, item) => {\n    const foundItem = listOfObjects.find(obj => obj[key] === item)\n\n    if (foundItem) {\n      return [...acc, foundItem]\n    }\n\n    return acc\n}, [])\n      ",usage:"\nconst list = [1, 2, 3]\nconst listOfObjects = [\n  { id: 2 },\n  { id: 1 },\n  { id: 3 },\n  { id: 4 }\n]\nconst key = 'id'\n\nconst result = getListOfObjects(list, listOfObjects, key)\n\n// const result = [\n//   { id: 1 },\n//   { id: 2 },\n//   { id: 3 },\n// ]\n      "}]},{category:o.Category.JAVASCRIPT,subcategory:o.JSSubcategory.OBJECT,title:"Removes deeply all falsy values from an object or array.",icon:"las la-trash",codes:[{key:"1",title:"",code:"\nconst compactObject = (val) => {\n  const data = Array.isArray(val) ? val.filter(Boolean) : val\n\n  return Object.keys(data).reduce(\n    (acc, key) => {\n      const value = data[key]\n      if (Boolean(value))\n        acc[key] = typeof value === 'object' ? compactObject(value) : value\n      return acc\n    },\n    Array.isArray(val) ? [] : {}\n  )\n}\n      ",usage:"\nconst obj = {\n  a: null,\n  b: false,\n  c: true,\n  d: 0,\n  e: 1,\n  f: '',\n  g: 'a',\n  h: [null, false, '', true, 1, 'a'],\n  i: { j: 0, k: false, l: 'a' }\n};\n\ncompactObject(obj);\n\n// {\n//   c: true,\n//   e: 1,\n//   g: 'a',\n//   h: [ true, 1, 'a' ],\n//   i: { l: 'a' }\n// }\n      "}]}]},5535:(n,e,t)=>{"use strict";function o(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,o=new Array(e);t<e;t++)o[t]=n[t];return o}t.r(e),t.d(e,{solutions:()=>a});var r,a=function(n){if(Array.isArray(n))return o(n)}(r=t(21790).basic)||function(n){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(n))return Array.from(n)}(r)||function(n,e){if(n){if("string"==typeof n)return o(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?o(n,e):void 0}}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}}]);