(self.webpackChunkjs_solutions=self.webpackChunkjs_solutions||[]).push([[539,83],{32179:(n,e,o)=>{"use strict";o.r(e),o.d(e,{basic:()=>r});var t=o(91713),r=[{category:t.Category.JAVASCRIPT,subcategory:t.JSSubcategory.FUNCTION,title:"Pipe (function composition)",icon:"las la-equals",codes:[{key:"1",title:"normal",code:"\nconst pipe = (...fns) => (arg) => fns.reduce((v, fn) => fn(v), arg)\n    ",usage:"\nconst addTwo = (x) => x + 2;\nconst double = (x) => x * 2;\nconst square = (x) => x * x;\nconst fn = pipe(addTwo, double, square);\n\nfn(1);\n// square(double(addTwo(1)))\n// 36\n    "},{key:"2",title:"reverse",code:"\nconst compose = (...fns) => fns.reduce((a, b) => (...args) => a(b(...args)))\n    ",usage:"\nconst addTwo = (x) => x + 2;\nconst double = (x) => x * 2;\nconst square = (x) => x * x;\nconst fn = compose(addTwo, double, square);\n\nfn(1);\n// addTwo(double(square(1)))\n// 4\n    "}]}]},75539:(n,e,o)=>{"use strict";function t(n,e){(null==e||e>n.length)&&(e=n.length);for(var o=0,t=new Array(e);o<e;o++)t[o]=n[o];return t}o.r(e),o.d(e,{solutions:()=>s});var r,s=function(n){if(Array.isArray(n))return t(n)}(r=o(32179).basic)||function(n){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(n))return Array.from(n)}(r)||function(n,e){if(n){if("string"==typeof n)return t(n,e);var o=Object.prototype.toString.call(n).slice(8,-1);return"Object"===o&&n.constructor&&(o=n.constructor.name),"Map"===o||"Set"===o?Array.from(n):"Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?t(n,e):void 0}}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}}]);