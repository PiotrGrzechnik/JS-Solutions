(self.webpackChunkjs_solutions=self.webpackChunkjs_solutions||[]).push([[790],{21790:(n,e,t)=>{"use strict";t.r(e),t.d(e,{basic:()=>s});var o=t(91713),s=[{category:o.Category.JAVASCRIPT,subcategory:o.JSSubcategory.OBJECT,title:"Copy of object",codes:[{key:"1",title:"shallow",code:"\n// Spread operator\nconst newObj = { ...obj }\n\n// Object.assign() method\nconst newObj = Object.assign({}, obj);\n      ",usage:"\nconst obj = {\n  a: 1,\n  b: '2'\n}\n\nconst newObj = { ...obj }\n// or\nconst newObj = Object.assign({}, obj);\n\n// const newObj = {\n//  a: 1,\n//  b: '2'\n// }\n\n      "},{key:"2",title:"deep",code:'\nconst deepCopy = (param) => {\n  let copyResult\n  let value\n\n  if (typeof param !== "object" || param === null) {\n    return param\n  }\n\n  copyResult = Array.isArray(param) ? [] : {}\n\n  for (const key in param) {\n    value = param[key]\n\n    copyResult[key] = deepCopy(value)\n  }\n\n  return copyResult\n}\n      ',usage:'\nconst originalObj = {\n  hello: {\n    word: "word"\n  }\n}\n\nconst copiedObj = deepCopy(originalObj)\ncopiedObj.hello.word = \'excel\'\n\n// const originalObj = {\n//   hello: {\n//     word: "word"\n//   }\n// }\n\n// const copiedObj = {\n//   hello: {\n//     word: "excel"\n//   }\n// }\n\n      '}]},{category:o.Category.JAVASCRIPT,subcategory:o.JSSubcategory.OBJECT,title:"Get array of objects in order, based on property from another list",codes:[{key:"1",title:"reduce",code:"\nconst getListOfObjects = (list, listOfObjects, key) =>\n  list.reduce((acc, item) => {\n    const foundItem = listOfObjects.find(obj => obj[key] === item)\n\n    if (foundItem) {\n      return [...acc, foundItem]\n    }\n\n    return acc\n}, [])\n      ",usage:"\nconst list = [1, 2, 3]\nconst listOfObjects = [\n  { id: 2 },\n  { id: 1 },\n  { id: 3 },\n  { id: 4 }\n]\nconst key = 'id'\n\nconst result = getListOfObjects(list, listOfObjects, key)\n\n// const result = [\n//   { id: 1 },\n//   { id: 2 },\n//   { id: 3 },\n// ]\n      "}]}]}}]);