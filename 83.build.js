(self.webpackChunkjs_solutions=self.webpackChunkjs_solutions||[]).push([[83],{32179:(n,e,s)=>{"use strict";s.r(e),s.d(e,{basic:()=>a});var o=s(91713),a=[{category:o.Category.JAVASCRIPT,subcategory:o.JSSubcategory.FUNCTION,title:"Pipe (function composition)",icon:"las la-equals",codes:[{key:"1",title:"normal",code:"\nconst pipe = (...fns) => (arg) => fns.reduce((v, fn) => fn(v), arg)\n    ",usage:"\nconst addTwo = (x) => x + 2;\nconst double = (x) => x * 2;\nconst square = (x) => x * x;\nconst fn = pipe(addTwo, double, square);\n\nfn(1);\n// square(double(addTwo(1)))\n// 36\n    "},{key:"2",title:"reverse",code:"\nconst compose = (...fns) => fns.reduce((a, b) => (...args) => a(b(...args)))\n    ",usage:"\nconst addTwo = (x) => x + 2;\nconst double = (x) => x * 2;\nconst square = (x) => x * x;\nconst fn = compose(addTwo, double, square);\n\nfn(1);\n// addTwo(double(square(1)))\n// 4\n    "}]}]}}]);