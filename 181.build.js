(self.webpackChunkjs_solutions=self.webpackChunkjs_solutions||[]).push([[181,522],{32522:(t,n,e)=>{"use strict";e.r(n),e.d(n,{basic:()=>s});var o=e(91713),s=[{category:o.Category.REACT,subcategory:o.ReactType.HOOKS,title:"Check if component is mounted",codes:[{key:"1",code:"\nconst useIsMountedRef = () => {\n\tconst isMounted = useRef(false);\n\n\tuseEffect(() => {\n\t\tisMounted.current = true;\n\n\t\treturn () => {\n\t\t\tisMounted.current = false;\n\t\t};\n\t}, []);\n\n\treturn isMounted;\n}\n      ",usage:"\n// In component:\n\nconst isMounted = useIsMountedRef();\n\n...\n\nif (isMounted.current) {\n\t// do stuff\n}\n      "}]},{category:o.Category.REACT,subcategory:o.ReactType.HOOKS,title:"Keep previous value",icon:"las la-undo-alt",codes:[{key:"1",code:"\nconst usePrevious = (value) => {\n\tconst ref = React.useRef()\n\n\tReact.useEffect(() => {\n\t\tref.current = value\n\t})\n\n\treturn ref.current\n}\n      ",usage:"\n// In component:\n\nconst lastValue = usePrevious(value)\n      "}]},{category:o.Category.REACT,subcategory:o.ReactType.HOOKS,title:"Mouse position hook",icon:"las la-mouse-pointer",codes:[{key:"1",code:'\nconst useMousePosition = () => {\n\tconst [mousePosition, setMousePosition] = useState({})\n\n\tuseEffect(() => {\n\t\tconst getMousePosition = e => {\n\t\t\tconst posX = e.clientX\n\t\t\tconst posY = e.clientY\n\t\t\tsetMousePosition({ posX, posY })\n\t\t}\n\n\t\tdocument.addEventListener("mousemove", getMousePosition)\n\n\t\treturn function cleanup() {\n\t\t\tdocument.removeEventListener("mousemove", getMousePosition)\n\t\t}\n\t})\n\n\treturn mousePosition\n}\n      ',usage:"\n// In component:\n\nconst { posX, posY } = useMousePosition()\n\n      "}]}]},13181:(t,n,e)=>{"use strict";function o(t,n){(null==n||n>t.length)&&(n=t.length);for(var e=0,o=new Array(n);e<n;e++)o[e]=t[e];return o}e.r(n),e.d(n,{solutions:()=>r});var s,r=function(t){if(Array.isArray(t))return o(t)}(s=e(32522).basic)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(s)||function(t,n){if(t){if("string"==typeof t)return o(t,n);var e=Object.prototype.toString.call(t).slice(8,-1);return"Object"===e&&t.constructor&&(e=t.constructor.name),"Map"===e||"Set"===e?Array.from(t):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?o(t,n):void 0}}(s)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}}]);